%% Larva file to monitor the Product Alerter Runner during runtime.
IMPORTS {
import org.productalerter.model.domain.Product;
import org.productalerter.ProductAlerter;
}

GLOBAL {
	VARIABLES {
		String validCreds = "b9ed2dbc-141a-4395-921d-ee8779610e1f";
		boolean loggedIn = false;
		int numOfAlerts = 0;
		int alertsOnPage = 0;
	}
	
	EVENTS {
		login(String userId) = {*.login(userId)}
		logout() = {*.logout()}
		deleteAlerts() = {*.deleteAlerts()}
		addAlert() = {*.addAlert()}
		viewAlerts() = {*.viewAlerts()}
		viewHome() = {*.viewHome()}
	}
	
	PROPERTY system {
		STATES {
			BAD {
				badLogout
				badLogin
			}
			NORMAL {
				loginPage
				alertsPage
				homePage
			}
			STARTING {
				start
			}
		}
		
		TRANSITIONS {
			%% ------------------ START STATE -------------------------------------------------
			
			%% add & delete
			start -> start [addAlert\\numOfAlerts++; System.out.println("Alert added.");]
			start -> start [deleteAlerts\\numOfAlerts=0; System.out.println("Deleted all alerts.");]
			%% view home & alerts
			start -> loginPage [viewAlerts\\System.out.println("User needs to be logged in to view alerts.");]
			start -> homePage [viewHome\\System.out.println("Viewing home page.");]
			%% login & logout
			start -> alertsPage [login\userId.equals(validCreds)\loggedIn = true; System.out.println("User logged.");]
			start -> loginPage [login\\System.out.println("User gave invalid credentials during login.");]
			start -> badLogout [logout\\System.out.println("Cannot log out because user is not logged in. Entering bad state!");]
		
		
			%% ------------------ LOGIN STATE -------------------------------------------------
			
			%% add & delete
			loginPage -> loginPage [addAlert\\numOfAlerts++; System.out.println("Alert added.");]
			loginPage -> loginPage [deleteAlerts\\numOfAlerts=0; System.out.println("Deleted all alerts.");]
			%% view home & alerts
			loginPage -> loginPage [viewAlerts\\System.out.println("User needs to be logged in to view alerts.");]
			loginPage -> homePage [viewHome\\System.out.println("Viewing home page.");]
			%% login & logout
			loginPage -> alertsPage [login\userId.equals(validCreds)\loggedIn = true; alertsOnPage = Math.min(5, numOfAlerts); System.out.println("User logged in.");]
			loginPage -> loginPage [login\\System.out.println("User gave invalid credentials during login.");]
			loginPage -> badLogout [logout\\System.out.println("Cannot log out because user is not logged in. Entering bad state!");]
	
	
			%% ------------------ ALERTS STATE -------------------------------------------------
			
			%% add & delete
			alertsPage -> alertsPage [addAlert\\numOfAlerts++; System.out.println("Alert added.");]
			alertsPage -> alertsPage [deleteAlerts\\numOfAlerts=0; System.out.println("Deleted all alerts.");]
			%% view home & alerts
			alertsPage -> alertsPage [viewAlerts\\alertsOnPage = Math.min(5, numOfAlerts); System.out.println("Viewing alerts.");]
			alertsPage -> homePage [viewHome\\System.out.println("Viewing home page.");]
			%% login & logout			
			alertsPage -> homePage [logout\\loggedIn=false;]
			alertsPage -> badLogin [login\\System.out.println("User already logged in. Entering bad state!");]
	
	
			%% ------------------ HOME STATE ---------------------------------------------------
			
			%% add & delete
			homePage -> homePage [addAlert\\numOfAlerts++; System.out.println("Alert added.");]
			homePage -> homePage [deleteAlerts\\numOfAlerts=0; System.out.println("Deleted all alerts.");]
			%% view home & alerts
			homePage -> loginPage [viewAlerts\loggedIn==false\System.out.println("User needs to be logged in to view alerts.");]
			homePage -> alertsPage [viewAlerts\loggedIn==true\System.out.println("Viewing alerts.");]
			homePage -> homePage [viewHome\\System.out.println("Viewing home page.");]
			%% login & logout
			homePage -> alertsPage [login\loggedIn==false && userId.equals(validCreds)\loggedIn = true; alertsOnPage = Math.min(5, numOfAlerts); System.out.println("User logged in.");]
			homePage -> loginPage [login\loggedIn==false\System.out.println("User gave invalid credentials during login.");]
			homePage -> badLogin [login\loggedIn==true\System.out.println("User is already logged in. Entering bad state!");]
			homePage -> homePage [logout\loggedIn==true\loggedIn=false; System.out.println("User logged out.");]
			homePage -> badLogout [logout\loggedIn==false\System.out.println("Cannot log out because user is not logged in. Entering bad state!");]
		}
	}
}